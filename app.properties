spring.application.name=database

#----------------------------------
# Enable ANSI colors
spring.output.ansi.enabled=always
#-----------------------------------

#-------------------------
# Change the port
server.port=6969
#-------------------------

# H2 Database
#-------------------------------------------------
spring.datasource.url=jdbc:h2:mem:brajeshdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=produser
spring.datasource.password=supersecret
#--------------------------------------------------


#JPA / Hibernate Configs (if using Spring Data JPA)
#--------------------------------
# Show SQL queries in logs
spring.jpa.show-sql=true

# Format SQL for readability
spring.jpa.properties.hibernate.format_sql=true

#Automatically create/update schema
# Update -> for dev, validate or explicit migrations (Flyway/Liquibase) -> for prod
spring.jpa.hibernate.ddl-auto=update
#----------------------------------------------

#-------------------------------------
# Enable H2 web console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# H2 Console Security (Optional)
spring.h2.console.settings.web-allow-others=false

# Hit -> http://localhost:8080/h2-console
#------------------------------------


# Logging Configs
#------------------------------
# Set root log level
logging.level.root=INFO

# More verbose logs for Hibernate (Optional)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#------------------------------


# Actuator (Health Checks & Monitoring)
#---------------------------------------------
# Enable actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Hit -> http://localhost:6969/actuator/health
#-----------------------------------------------


# Dev Tools (Auto Restart)
spring.devtools.restart.enabled=true


# Profiles (Different configs for Dev/Prod)
spring.profiles.active=dev

# application-dev.properties → H2, verbose logs, ddl-auto=update
#application-test.properties → H2 but ddl-auto=create-drop (resets each test run)
#application-prod.properties → MySQL/Postgres, ddl-auto=validate, no H2 console, quieter logs


# Custom Banner (Optional)
#------------------------------------------------------------
# Make a banner.txt in src/main/resources/ with ASCII art,
# so when your app starts you get a custom splash.
# Example:

${AnsiColor.BRIGHT_BLUE}${AnsiStyle.BOLD}
========================
        BRAJESH
========================
${AnsiStyle.NORMAL}${AnsiColor.GREEN}

Application : ${spring.application.name}
Profile     : ${spring.profiles.active}
Version     : ${application.version}
Java        : ${java.version}
OS          : ${os.name}
Server      : ${server.port}
Description : ${app.description}
Environment : ${app.environment}

${AnsiColor.DEFAULT}


---- properties file ----

spring.application.name=DATABASE
spring.profiles.active=DEV
server.port=8080
application.version=3.5.5
application.formatted-version=(v3.5.5)

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=dev
spring.datasource.password=changemeinprod!
spring.datasource.driver-class-name=org.postgresql.Driver

spring.output.ansi.enabled=always

# Custom Application Properties
app.description=A microservice for handling database connections
app.environment=Development Server

#------------------------------------------------------------


# Datasource connection pool tuning (HikariCP)
#-----------------------------------------------------------
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=20000

#-----------------------------------------------------------


# Error page handling
#----------------------------------------------
server.error.whitelabel.enabled=false
server.error.include-message=always
server.error.include-stacktrace=on_param
#----------------------------------------------


# CORS (if you plan to build APIs with React frontend)
#--------------------------------------------------------------
# Allow React frontend at localhost:3000 to talk to backend
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
#---------------------------------------------------------------


# JSON pretty printing (for REST APIs)
#-----------------------------------------------
spring.jackson.serialization.indent-output=true
#-----------------------------------------------

# Run database initialization scripts
#-------------------------------------------------------------------
sql.init.mode=always

# dev/test: always is great (auto-seed DB).
# In prod: Dangerous → you don’t want Spring dropping/re-creating your schema.
#--------------------------------------------------------------------


spring.datasource.password=${DB_PASSWORD:defaultpassword}

management.metrics.export.prometheus.enabled=true


→ Useful if you ever deploy with Docker/K8s.

Async Config (if using @Async or messaging)

spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=20
spring.task.execution.pool.queue-capacity=100


spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB



spring.cache.type=simple   # or caffeine, redis, etc.


spring.application.name=database-app

# Enable ANSI colors in logs (for readability)
spring.output.ansi.enabled=always

# Default profile (you can override with SPRING_PROFILES_ACTIVE env var)
spring.profiles.active=dev

# Common logging
logging.level.root=INFO

# Devtools auto-restart (applies in dev)
spring.devtools.restart.enabled=true


# Port for dev
server.port=6969

# H2 Database (In-Memory)
spring.datasource.url=jdbc:h2:mem:brajeshdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=devuser
spring.datasource.password=devpass

# Show SQL queries in logs
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Auto-update schema for dev
spring.jpa.hibernate.ddl-auto=update

# Enable H2 console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=false

# More verbose Hibernate logs (for learning/debugging)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# Use random port so tests don’t conflict
server.port=0

# H2 Database (create-drop so DB resets between runs)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=testuser
spring.datasource.password=testpass

# Reset schema for each test run
spring.jpa.hibernate.ddl-auto=create-drop

# Keep test logs cleaner
logging.level.root=WARN



# Production Port
server.port=8080

# Externalized DB config (environment variables recommended)
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/proddb}
spring.datasource.username=${DB_USER:produser}
spring.datasource.password=${DB_PASSWORD:supersecret}

spring.datasource.driverClassName=org.postgresql.Driver

# Safer schema handling in prod (don’t auto-update DB!)
spring.jpa.hibernate.ddl-auto=validate

# Don’t show SQL in logs in prod
spring.jpa.show-sql=false

# Actuator (health & monitoring)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Metrics for Prometheus / Micrometer (optional)
management.metrics.export.prometheus.enabled=true

# Logging
logging.level.root=INFO
logging.level.org.hibernate.SQL=ERROR




